# ============================================
# üîπ handlers/group_moderation.py ‚Äî –≥—Ä—É–ø–ø–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä–∏
# ============================================

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ChatPermissions
from aiogram.filters import Command, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime, timedelta
import sqlite3
import re

router = Router()

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–º–µ—Ç–æ–∫ –∏ –º—É—Ç–æ–≤
NOTES_DB = "group_data.db"

def init_group_db():
    """–ì—Ä—É–ø–ø–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä –±–∞–∑–∞—Å–∏–Ω–∏ –∏—à–≥–∞ —Ç—É—à–∏—Ä–∏—à"""
    conn = sqlite3.connect(NOTES_DB)
    cursor = conn.cursor()
    
    # –ó–∞–º–µ—Ç–∫–∞–ª–∞—Ä —É—á—É–Ω —Ç–∞–±–ª–∏—Ü–∞
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS notes (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        group_id INTEGER NOT NULL,
        trigger TEXT NOT NULL,
        content TEXT NOT NULL,
        created_by INTEGER NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
    ''')
    
    # –ú—É—Ç–ª–∞—Ä —É—á—É–Ω —Ç–∞–±–ª–∏—Ü–∞
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS mutes (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        group_id INTEGER NOT NULL,
        muted_until TIMESTAMP NOT NULL,
        muted_by INTEGER NOT NULL,
        reason TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
    ''')
    
    # –ê–¥–º–∏–Ω–ª–∞—Ä —É—á—É–Ω —Ç–∞–±–ª–∏—Ü–∞
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS group_admins (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        group_id INTEGER NOT NULL,
        added_by INTEGER NOT NULL,
        added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
    ''')
    
    conn.commit()
    conn.close()
    print("‚úÖ –ì—Ä—É–ø–ø–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä –±–∞–∑–∞—Å–∏ –∏—à–≥–∞ —Ç—É—à–¥–∏")

def get_group_connection():
    """–ì—Ä—É–ø–ø–∞ –±–∞–∑–∞—Å–∏ –±–∏–ª–∞–Ω –±–æ“ì–ª–∞–Ω–∏—à"""
    return sqlite3.connect(NOTES_DB)

# –¢–µ–∫—Å—Ç—ã –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ
TEXTS = {
    "ban_success": "‚úÖ <b>{user}</b> –≥—É—Ä—É“≥–¥–∞–Ω “≥–∞“õ–∏“õ–∏–π “≥–∞–π–¥–∞–± —é–±–æ—Ä–∏–ª–¥–∏!",
    "ban_error": "‚ùå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ “≥–∞–π–¥–∞–± –±—û–ª–º–∞–¥–∏. –ú–µ–Ω —É–Ω–¥–∞–Ω —é“õ–æ—Ä–∏—Ä–æ“õ “≥—É“õ—É“õ“ì–∞ —ç–≥–∞–º–∞–Ω.",
    "kick_success": "‚úÖ <b>{user}</b> –≥—É—Ä—É“≥–¥–∞–Ω —á–∏“õ–∞—Ä–∏–± —é–±–æ—Ä–∏–ª–¥–∏!",
    "kick_error": "‚ùå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ —á–∏“õ–∞—Ä–∏–± –±—û–ª–º–∞–¥–∏.",
    "mute_success": "üîá <b>{user}</b> {time} –º—É–¥–¥–∞—Ç–≥–∞ –æ–≤–æ–∑—Å–∏–∑–ª–∞–Ω–¥–∏!",
    "mute_error": "‚ùå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –æ–≤–æ–∑—Å–∏–∑–ª–∞–Ω—Ç–∏—Ä–∏–± –±—û–ª–º–∞–¥–∏.",
    "unmute_success": "üîä <b>{user}</b> –æ–≤–æ–∑–∏ “õ–∞–π—Ç–∞—Ä–∏–ª–¥–∏!",
    "unmute_error": "‚ùå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –æ–≤–æ–∑–∏–Ω–∏ “õ–∞–π—Ç–∞—Ä–∏–± –±—û–ª–º–∞–¥–∏.",
    "note_added": "üìù <b>–Ø–Ω–≥–∏ —ç—Å–ª–∞—Ç–º–∞ “õ—û—à–∏–ª–¥–∏:</b>\n–¢—Ä–∏–≥–≥–µ—Ä: <code>{trigger}</code>\n–ú–∞–∑–º—É–Ω–∏: {content}",
    "note_removed": "üóëÔ∏è <b>–≠—Å–ª–∞—Ç–º–∞ —û—á–∏—Ä–∏–ª–¥–∏:</b> #{note_id}",
    "note_not_found": "‚ùå –ë—É–Ω–¥–∞–π ID –≥–∞ —ç–≥–∞ —ç—Å–ª–∞—Ç–º–∞ —Ç–æ–ø–∏–ª–º–∞–¥–∏.",
    "note_triggered": "üìå <b>–≠—Å–ª–∞—Ç–º–∞:</b>\n{content}",
    "admin_added": "üëë <b>{user}</b> –≥—É—Ä—É“≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä “õ–∏–ª–∏–± —Ç–∞–π–∏–Ω–ª–∞–Ω–¥–∏!",
    "admin_removed": "üëë <b>{user}</b> –≥—É—Ä—É“≥–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–ª–∏–∫ “≥—É“õ—É“õ–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞–Ω–¥–∏!",
    "admin_list": "üëë <b>–ì—É—Ä—É“≥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–ª–∞—Ä–∏:</b>\n\n{admins}",
    "no_admins": "‚ùå –ì—É—Ä—É“≥–¥–∞ “≥–µ—á “õ–∞–Ω–¥–∞–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –π—û“õ.",
    "message_deleted": "üóëÔ∏è <b>–•–∞–±–∞—Ä —û—á–∏—Ä–∏–ª–¥–∏!</b>",
    "no_permission": "‚õî <b>–°–∏–∑–¥–∞ –±—É “≥–∞—Ä–∞–∫–∞—Ç–Ω–∏ –±–∞–∂–∞—Ä–∏—à —É—á—É–Ω “≥—É“õ—É“õ –π—û“õ!</b>",
    "user_not_found": "‚ùå –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ —Ç–æ–ø–∏–ª–º–∞–¥–∏.",
    "syntax_error": "‚ùå <b>–ù–æ—Ç—û“ì—Ä–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!</b>\n–¢—û“ì—Ä–∏ —Ñ–æ–π–¥–∞–ª–∞–Ω–∏—à: <code>{syntax}</code>",
    "broadcast_success": "üì¢ <b>–•–∞–±–∞—Ä {count} —Ç–∞ –≥—É—Ä—É“≥–≥–∞ —é–±–æ—Ä–∏–ª–¥–∏!</b>",
    "broadcast_error": "‚ùå –•–∞–±–∞—Ä–Ω–∏ —é–±–æ—Ä–∏—à–¥–∞ —Ö–∞—Ç–æ–ª–∏–∫ —é–∑ –±–µ—Ä–¥–∏."
}

# –í—Ä–µ–º—è –º—É—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
MUTE_TIMES = {
    "5m": timedelta(minutes=5),
    "30m": timedelta(minutes=30),
    "1h": timedelta(hours=1),
    "6h": timedelta(hours=6),
    "1d": timedelta(days=1),
    "7d": timedelta(days=7)
}

# ==============================
# üîò –ê–¥–º–∏–Ω–ª–∏–∫ “≥—É“õ—É“õ–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
# ==============================
async def is_group_admin(bot, chat_id, user_id):
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –≥—É—Ä—É“≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–º–∏ —ë–∫–∏ –π—û“õ–º–∏"""
    try:
        member = await bot.get_chat_member(chat_id, user_id)
        return member.status in ['administrator', 'creator']
    except:
        return False

async def is_bot_admin(bot, chat_id):
    """–ë–æ—Ç –≥—É—Ä—É“≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–º–∏ —ë–∫–∏ –π—û“õ–º–∏"""
    try:
        me = await bot.get_me()
        member = await bot.get_chat_member(chat_id, me.id)
        return member.status in ['administrator', 'creator']
    except:
        return False

# ==============================
# üîò –ë–∞–Ω “õ–∏–ª–∏—à
# ==============================
@router.message(Command("ban"))
async def ban_user(message: Message):
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –≥—É—Ä—É“≥–¥–∞–Ω –±–∞–Ω “õ–∏–ª–∏—à"""
    if not await is_bot_admin(message.bot, message.chat.id):
        return
    
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not message.reply_to_message:
        await message.reply(TEXTS["syntax_error"].format(syntax="/ban [—Å–∞–±–∞–±] - —Ö–∞–±–∞—Ä–≥–∞ –∂–∞–≤–æ–±–∞–Ω"))
        return
    
    target_user = message.reply_to_message.from_user
    reason = message.text.split(' ', 1)[1] if len(message.text.split()) > 1 else "–°–∞–±–∞–± –∫—û—Ä—Å–∞—Ç–∏–ª–º–∞–≥–∞–Ω"
    
    try:
        await message.bot.ban_chat_member(
            chat_id=message.chat.id,
            user_id=target_user.id
        )
        await message.reply(TEXTS["ban_success"].format(user=target_user.full_name))
    except Exception as e:
        await message.reply(TEXTS["ban_error"])

# ==============================
# üîò –ß–∏“õ–∞—Ä–∏–± —é–±–æ—Ä–∏—à
# ==============================
@router.message(Command("kick"))
async def kick_user(message: Message):
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –≥—É—Ä—É“≥–¥–∞–Ω —á–∏“õ–∞—Ä–∏—à"""
    if not await is_bot_admin(message.bot, message.chat.id):
        return
    
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not message.reply_to_message:
        await message.reply(TEXTS["syntax_error"].format(syntax="/kick [—Å–∞–±–∞–±] - —Ö–∞–±–∞—Ä–≥–∞ –∂–∞–≤–æ–±–∞–Ω"))
        return
    
    target_user = message.reply_to_message.from_user
    reason = message.text.split(' ', 1)[1] if len(message.text.split()) > 1 else "–°–∞–±–∞–± –∫—û—Ä—Å–∞—Ç–∏–ª–º–∞–≥–∞–Ω"
    
    try:
        await message.bot.ban_chat_member(
            chat_id=message.chat.id,
            user_id=target_user.id,
            until_date=datetime.now() + timedelta(seconds=30)
        )
        await message.reply(TEXTS["kick_success"].format(user=target_user.full_name))
    except Exception as e:
        await message.reply(TEXTS["kick_error"])

# ==============================
# üîò –û–≤–æ–∑—Å–∏–∑–ª–∞–Ω—Ç–∏—Ä–∏—à
# ==============================
@router.message(Command("mute"))
async def mute_user(message: Message, command: CommandObject):
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –æ–≤–æ–∑—Å–∏–∑–ª–∞–Ω—Ç–∏—Ä–∏—à"""
    if not await is_bot_admin(message.bot, message.chat.id):
        return
    
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not message.reply_to_message:
        await message.reply(TEXTS["syntax_error"].format(syntax="/mute [–≤–∞“õ—Ç] [—Å–∞–±–∞–±] - —Ö–∞–±–∞—Ä–≥–∞ –∂–∞–≤–æ–±–∞–Ω\n–ú–∏—Å–æ–ª: /mute 1h —Ä–µ–∫–ª–∞–º–∞ —É—á—É–Ω"))
        return
    
    target_user = message.reply_to_message.from_user
    args = command.args.split() if command.args else []
    
    if not args:
        mute_time = timedelta(hours=1)
        reason = "–°–∞–±–∞–± –∫—û—Ä—Å–∞—Ç–∏–ª–º–∞–≥–∞–Ω"
    else:
        time_arg = args[0].lower()
        reason = ' '.join(args[1:]) if len(args) > 1 else "–°–∞–±–∞–± –∫—û—Ä—Å–∞—Ç–∏–ª–º–∞–≥–∞–Ω"
        
        if time_arg in MUTE_TIMES:
            mute_time = MUTE_TIMES[time_arg]
        else:
            # –í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
            try:
                minutes = int(time_arg)
                mute_time = timedelta(minutes=minutes)
            except:
                mute_time = timedelta(hours=1)
    
    muted_until = datetime.now() + mute_time
    
    try:
        await message.bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=target_user.id,
            permissions=ChatPermissions(
                can_send_messages=False,
                can_send_media_messages=False,
                can_send_other_messages=False,
                can_add_web_page_previews=False
            ),
            until_date=muted_until
        )
        
        # –ú—É—Ç–Ω–∏ –±–∞–∑–∞–≥–∞ —Å–∞“õ–ª–∞—à
        conn = get_group_connection()
        cursor = conn.cursor()
        cursor.execute('''
        INSERT INTO mutes (user_id, group_id, muted_until, muted_by, reason)
        VALUES (?, ?, ?, ?, ?)
        ''', (target_user.id, message.chat.id, muted_until, message.from_user.id, reason))
        conn.commit()
        conn.close()
        
        time_str = ""
        if mute_time.days > 0:
            time_str = f"{mute_time.days} –∫—É–Ω"
        else:
            hours = mute_time.seconds // 3600
            minutes = (mute_time.seconds % 3600) // 60
            if hours > 0:
                time_str = f"{hours} —Å–æ–∞—Ç"
            else:
                time_str = f"{minutes} –¥–∞“õ–∏“õ–∞"
        
        await message.reply(TEXTS["mute_success"].format(user=target_user.full_name, time=time_str))
    except Exception as e:
        await message.reply(TEXTS["mute_error"])

# ==============================
# üîò –û–≤–æ–∑–∏–Ω–∏ “õ–∞–π—Ç–∞—Ä–∏—à
# ==============================
@router.message(Command("unmute"))
async def unmute_user(message: Message):
    """–§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏–Ω–≥ –æ–≤–æ–∑–∏–Ω–∏ “õ–∞–π—Ç–∞—Ä–∏—à"""
    if not await is_bot_admin(message.bot, message.chat.id):
        return
    
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not message.reply_to_message:
        await message.reply(TEXTS["syntax_error"].format(syntax="/unmute - —Ö–∞–±–∞—Ä–≥–∞ –∂–∞–≤–æ–±–∞–Ω"))
        return
    
    target_user = message.reply_to_message.from_user
    
    try:
        await message.bot.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=target_user.id,
            permissions=ChatPermissions(
                can_send_messages=True,
                can_send_media_messages=True,
                can_send_other_messages=True,
                can_add_web_page_previews=True
            )
        )
        
        # –ú—É—Ç–Ω–∏ –±–∞–∑–∞–¥–∞–Ω —û—á–∏—Ä–∏—à
        conn = get_group_connection()
        cursor = conn.cursor()
        cursor.execute('''
        DELETE FROM mutes 
        WHERE user_id = ? AND group_id = ?
        ''', (target_user.id, message.chat.id))
        conn.commit()
        conn.close()
        
        await message.reply(TEXTS["unmute_success"].format(user=target_user.full_name))
    except Exception as e:
        await message.reply(TEXTS["unmute_error"])

# ==============================
# üîò –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à
# ==============================
@router.message(Command("del"))
async def delete_message(message: Message):
    """–•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à"""
    if not await is_bot_admin(message.bot, message.chat.id):
        return
    
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not message.reply_to_message:
        await message.reply(TEXTS["syntax_error"].format(syntax="/del - —û—á–∏—Ä–∏—à —É—á—É–Ω —Ö–∞–±–∞—Ä–≥–∞ –∂–∞–≤–æ–± –±–µ—Ä–∏–Ω–≥"))
        return
    
    try:
        await message.bot.delete_message(
            chat_id=message.chat.id,
            message_id=message.reply_to_message.message_id
        )
        await message.delete()
    except:
        pass

# ==============================
# üîò –≠—Å–ª–∞—Ç–º–∞ “õ—û—à–∏—à
# ==============================
@router.message(Command("note"))
async def add_note(message: Message, command: CommandObject):
    """–Ø–Ω–≥–∏ —ç—Å–ª–∞—Ç–º–∞ “õ—û—à–∏—à"""
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not command.args:
        await message.reply(TEXTS["syntax_error"].format(syntax="/note [—Ç—Ä–∏–≥–≥–µ—Ä] [–º–∞—Ç–Ω]"))
        return
    
    args = command.args.split(' ', 1)
    if len(args) < 2:
        await message.reply(TEXTS["syntax_error"].format(syntax="/note [—Ç—Ä–∏–≥–≥–µ—Ä] [–º–∞—Ç–Ω]"))
        return
    
    trigger = args[0].lower()
    content = args[1]
    
    conn = get_group_connection()
    cursor = conn.cursor()
    
    # –¢—Ä–∏–≥–≥–µ—Ä –º–∞–≤–∂—É–¥–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
    cursor.execute('''
    SELECT id FROM notes 
    WHERE group_id = ? AND trigger = ?
    ''', (message.chat.id, trigger))
    
    existing_note = cursor.fetchone()
    
    if existing_note:
        # –Ø–Ω–≥–∏–ª–∞–Ω–≥–∞–Ω —ç—Å–ª–∞—Ç–º–∞
        cursor.execute('''
        UPDATE notes SET content = ?, created_by = ?
        WHERE id = ?
        ''', (content, message.from_user.id, existing_note[0]))
    else:
        # –Ø–Ω–≥–∏ —ç—Å–ª–∞—Ç–º–∞
        cursor.execute('''
        INSERT INTO notes (group_id, trigger, content, created_by)
        VALUES (?, ?, ?, ?)
        ''', (message.chat.id, trigger, content, message.from_user.id))
    
    conn.commit()
    conn.close()
    
    await message.reply(TEXTS["note_added"].format(trigger=trigger, content=content))

# ==============================
# üîò –≠—Å–ª–∞—Ç–º–∞–Ω–∏ —û—á–∏—Ä–∏—à
# ==============================
@router.message(Command("delnote"))
async def delete_note(message: Message, command: CommandObject):
    """–≠—Å–ª–∞—Ç–º–∞–Ω–∏ —û—á–∏—Ä–∏—à"""
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not command.args:
        await message.reply(TEXTS["syntax_error"].format(syntax="/delnote [ID]"))
        return
    
    try:
        note_id = int(command.args)
    except ValueError:
        await message.reply(TEXTS["syntax_error"].format(syntax="/delnote [ID]"))
        return
    
    conn = get_group_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
    DELETE FROM notes 
    WHERE id = ? AND group_id = ?
    ''', (note_id, message.chat.id))
    
    if cursor.rowcount > 0:
        conn.commit()
        await message.reply(TEXTS["note_removed"].format(note_id=note_id))
    else:
        await message.reply(TEXTS["note_not_found"])
    
    conn.close()

# ==============================
# üîò –≠—Å–ª–∞—Ç–º–∞–ª–∞—Ä–Ω–∏ –∫—û—Ä—Å–∞—Ç–∏—à
# ==============================
@router.message(Command("notes"))
async def show_notes(message: Message):
    """–ë–∞—Ä—á–∞ —ç—Å–ª–∞—Ç–º–∞–ª–∞—Ä–Ω–∏ –∫—û—Ä—Å–∞—Ç–∏—à"""
    conn = get_group_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
    SELECT id, trigger, content FROM notes 
    WHERE group_id = ? 
    ORDER BY id
    ''', (message.chat.id,))
    
    notes = cursor.fetchall()
    conn.close()
    
    if not notes:
        await message.reply("üìù <b>“≤–µ—á “õ–∞–Ω–¥–∞–π —ç—Å–ª–∞—Ç–º–∞ —Ç–æ–ø–∏–ª–º–∞–¥–∏.</b>")
        return
    
    text = "üìã <b>–ì—É—Ä—É“≥ —ç—Å–ª–∞—Ç–º–∞–ª–∞—Ä–∏:</b>\n\n"
    for note_id, trigger, content in notes:
        short_content = content[:50] + "..." if len(content) > 50 else content
        text += f"üîπ <b>#{note_id}</b> - <code>{trigger}</code>\n{short_content}\n\n"
    
    await message.reply(text)

# ==============================
# üîò –≠—Å–ª–∞—Ç–º–∞ —Ç—Ä–∏–≥–≥–µ—Ä–ª–∞—Ä–∏–Ω–∏ “õ–∞–π—Ç–∞ –∏—à–ª–∞—à
# ==============================
@router.message(F.text)
async def handle_note_triggers(message: Message):
    """–≠—Å–ª–∞—Ç–º–∞ —Ç—Ä–∏–≥–≥–µ—Ä–ª–∞—Ä–∏–Ω–∏ –∞–Ω–∏–∫–ª–∞—à"""
    if not message.text or message.text.startswith('/'):
        return
    
    text = message.text.lower().strip()
    
    conn = get_group_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
    SELECT content FROM notes 
    WHERE group_id = ? AND trigger = ?
    ''', (message.chat.id, text))
    
    note = cursor.fetchone()
    conn.close()
    
    if note:
        await message.reply(TEXTS["note_triggered"].format(content=note[0]))

# ==============================
# üîò –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä “õ—û—à–∏—à
# ==============================
@router.message(Command("addadmin"))
async def add_admin(message: Message):
    """–Ø–Ω–≥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä “õ—û—à–∏—à"""
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not message.reply_to_message:
        await message.reply(TEXTS["syntax_error"].format(syntax="/addadmin - —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ –∂–∞–≤–æ–±–∞–Ω"))
        return
    
    target_user = message.reply_to_message.from_user
    
    conn = get_group_connection()
    cursor = conn.cursor()
    
    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–∞–≤–∂—É–¥–ª–∏–≥–∏–Ω–∏ —Ç–µ–∫—à–∏—Ä–∏—à
    cursor.execute('''
    SELECT id FROM group_admins 
    WHERE user_id = ? AND group_id = ?
    ''', (target_user.id, message.chat.id))
    
    existing_admin = cursor.fetchone()
    
    if existing_admin:
        await message.reply(f"‚ùå <b>{target_user.full_name}</b> –∞–ª–ª–∞“õ–∞—á–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!")
        conn.close()
        return
    
    # –Ø–Ω–≥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    cursor.execute('''
    INSERT INTO group_admins (user_id, group_id, added_by)
    VALUES (?, ?, ?)
    ''', (target_user.id, message.chat.id, message.from_user.id))
    
    conn.commit()
    conn.close()
    
    await message.reply(TEXTS["admin_added"].format(user=target_user.full_name))

# ==============================
# üîò –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–Ω–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞—à
# ==============================
@router.message(Command("removeadmin"))
async def remove_admin(message: Message):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–Ω–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞—à"""
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not message.reply_to_message:
        await message.reply(TEXTS["syntax_error"].format(syntax="/removeadmin - —Ñ–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–≥–∞ –∂–∞–≤–æ–±–∞–Ω"))
        return
    
    target_user = message.reply_to_message.from_user
    
    conn = get_group_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
    DELETE FROM group_admins 
    WHERE user_id = ? AND group_id = ?
    ''', (target_user.id, message.chat.id))
    
    if cursor.rowcount > 0:
        conn.commit()
        await message.reply(TEXTS["admin_removed"].format(user=target_user.full_name))
    else:
        await message.reply(f"‚ùå <b>{target_user.full_name}</b> –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —ç–º–∞—Å!")
    
    conn.close()

# ==============================
# üîò –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏
# ==============================
@router.message(Command("admins"))
async def list_admins(message: Message):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏"""
    conn = get_group_connection()
    cursor = conn.cursor()
    
    cursor.execute('''
    SELECT user_id FROM group_admins 
    WHERE group_id = ?
    ''', (message.chat.id,))
    
    admin_ids = [row[0] for row in cursor.fetchall()]
    conn.close()
    
    if not admin_ids:
        await message.reply(TEXTS["no_admins"])
        return
    
    admins_text = ""
    for user_id in admin_ids:
        try:
            user = await message.bot.get_chat(user_id)
            admins_text += f"üëë {user.full_name} (@{user.username})\n"
        except:
            admins_text += f"üëë ID: {user_id}\n"
    
    await message.reply(TEXTS["admin_list"].format(admins=admins_text))

# ==============================
# üîò –•–∞–±–∞—Ä —Ç–∞—Ä“õ–∞—Ç–∏—à
# ==============================
@router.message(Command("broadcast"))
async def broadcast_message(message: Message, command: CommandObject):
    """–•–∞–±–∞—Ä–Ω–∏ –±–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä–≥–∞ —Ç–∞—Ä“õ–∞—Ç–∏—à"""
    if not await is_group_admin(message.bot, message.chat.id, message.from_user.id):
        await message.reply(TEXTS["no_permission"])
        return
    
    if not command.args:
        await message.reply(TEXTS["syntax_error"].format(syntax="/broadcast [–º–∞—Ç–Ω]"))
        return
    
    # –ë—É –µ—Ä–¥–∞ –±–∞—Ä—á–∞ –≥—É—Ä—É“≥–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏ –±—û–ª–∏—à–∏ –∫–µ—Ä–∞–∫
    # “≤–æ–∑–∏—Ä—á–∞ —Ñ–∞“õ–∞—Ç –∂–æ—Ä–∏–π –≥—É—Ä—É“≥–≥–∞ —é–±–æ—Ä–∞–º–∏–∑
    try:
        await message.bot.send_message(
            chat_id=message.chat.id,
            text=command.args
        )
        await message.reply(TEXTS["broadcast_success"].format(count=1))
    except Exception as e:
        await message.reply(TEXTS["broadcast_error"])

# ==============================
# üîò –Å—Ä–¥–∞–º –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏
# ==============================
@router.message(Command("help"))
async def help_command(message: Message):
    """–Å—Ä–¥–∞–º –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏"""
    help_text = """
ü§ñ <b>–ë–æ—Ç –Å—Ä–¥–∞–º –ú–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏:</b>

üëÆ <b>–ú–æ–¥–µ—Ä–∞—Ü–∏—è:</b>
‚Ä¢ /ban - –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –±–∞–Ω “õ–∏–ª–∏—à
‚Ä¢ /kick - –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ —á–∏“õ–∞—Ä–∏–± —é–±–æ—Ä–∏—à
‚Ä¢ /mute - –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏–Ω–∏ –æ–≤–æ–∑—Å–∏–∑–ª–∞–Ω—Ç–∏—Ä–∏—à
‚Ä¢ /unmute - –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏ –æ–≤–æ–∑–∏–Ω–∏ “õ–∞–π—Ç–∞—Ä–∏—à
‚Ä¢ /del - –•–∞–±–∞—Ä–Ω–∏ —û—á–∏—Ä–∏—à

üìù <b>–≠—Å–ª–∞—Ç–º–∞–ª–∞—Ä:</b>
‚Ä¢ /note [—Ç—Ä–∏–≥–≥–µ—Ä] [–º–∞—Ç–Ω] - –Ø–Ω–≥–∏ —ç—Å–ª–∞—Ç–º–∞ “õ—û—à–∏—à
‚Ä¢ /delnote [ID] - –≠—Å–ª–∞—Ç–º–∞–Ω–∏ —û—á–∏—Ä–∏—à
‚Ä¢ /notes - –ë–∞—Ä—á–∞ —ç—Å–ª–∞—Ç–º–∞–ª–∞—Ä–Ω–∏ –∫—û—Ä—Å–∞—Ç–∏—à

üëë <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–ª–∞—Ä:</b>
‚Ä¢ /addadmin - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä “õ—û—à–∏—à
‚Ä¢ /removeadmin - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–Ω–∏ –æ–ª–∏–± —Ç–∞—à–ª–∞—à
‚Ä¢ /admins - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–ª–∞—Ä —Ä—û–π—Ö–∞—Ç–∏

üì¢ <b>–ë–æ—à“õ–∞:</b>
‚Ä¢ /broadcast [–º–∞—Ç–Ω] - –•–∞–±–∞—Ä —Ç–∞—Ä“õ–∞—Ç–∏—à
‚Ä¢ /help - –Å—Ä–¥–∞–º –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏

üí° <b>–≠—Å–ª–∞—Ç–º–∞:</b> –ë–∞—Ä—á–∞ –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä —Ñ–∞“õ–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–ª–∞—Ä —É—á—É–Ω!
    """
    
    await message.reply(help_text)

# –ë–∞–∑–∞–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è “õ–∏–ª–∏—à
init_group_db()